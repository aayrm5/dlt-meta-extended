[{
  "target_table": "race_transcation_event_fo",
  "sources": [
    {
		"reference_name": "ab_race_pmu_vw1",
		"source_table_dev": "edap_dev.stg_ak.ab_race_pmu",
		"filter_condition": "",
		"is_streaming": "true",
		"pii_fields":{}
	},
	{
		"reference_name": "v_wagering_dim_account_vw1",
		"source_table_dev": "edap.ftr_wagering.v_wagering_dim_account",
		"filter_condition": "",
		"is_streaming": "false",
		"pii_fields": {}
	},
	{
		"reference_name": "fs_customer_segment_vw1",
		"source_table_dev": "edap.uc_csii_dna_rt_racing_dashboard.mv_customer_segment_snapshot",
		"filter_condition": "",
		"is_streaming": "false",
		"pii_fields": {}
	}
  ],
  "dlt_views": [
    {
      "reference_name": "race_transcation_event_fo_view",
      "sql_condition": "SELECT regexp_extract(variant_get(parse_json(decoded_value), '$.header.betline', 'string'), '^\\w+\\s\\w+\\s(\\w+)', 1) as meeting_loc, to_date(regexp_extract(variant_get(parse_json(decoded_value), '$.header.betline', 'string'), '^\\w+\\s\\w+\\s(\\d{2}/\\d{2}/\\d{4})', 1), 'dd/MM/yyyy') as meeting_date, seg.sub_segment, case when left(case when SOURCE_TYPE = 4 OR SOURCE_TYPE = 19 OR CIT_TYPE = 'IBT' then nvl(CBBT_CENTRE_NO, OLD_CB_CENTRE_NO) else CBBT_CENTRE_NO end, 1) in (3, 6, 9) then 'RC ESC/EWallet' when left(case when SOURCE_TYPE = 4 OR SOURCE_TYPE = 19 OR CIT_TYPE = 'IBT' then nvl(CBBT_CENTRE_NO, OLD_CB_CENTRE_NO) else CBBT_CENTRE_NO end, 1) in (1, 2, 4, 5, 7, 8) then 'OCB ESC/Ewallet' when SUBSTRing(V_TERM_NO, 1, 4) = 'TBAS' or SOURCE_TYPE = 17 then 'TBAS' when SOURCE_TYPE <> 17 and CIT_TYPE in ('IOSBS', 'AOSBS') then 'Classic 3-in-1' when SOURCE_TYPE <> 17 and CIT_TYPE in ('JCBWEKBA') then 'eWin' when SOURCE_TYPE <> 17 and CIT_TYPE in ('JCBW') then 'eWin(New)' when SOURCE_TYPE <> 17 and CIT_TYPE in ('IBUT', 'IBUA') then 'Racing Touch' when SOURCE_TYPE <> 17 and CIT_TYPE in ('MASBAI', 'MASBAA') then 'GoalX' when SOURCE_TYPE <> 17 and nvl(CIT_TYPE, '') not in ('AMBS', 'CIT-3', 'CIT3', 'CIT-3A', 'CIT3A', 'CIT-5', 'CIT5', 'CIT6', 'CIT-8', 'CIT8', 'CIT-PDA', 'CITPDA', 'PDA', 'EWIN', 'E-WIN', 'JCBW', 'MANGO', 'JCBWEKBA', 'MANGOCOMBO', 'MANGODELUXE', 'MPB', 'TWM', 'WLPDA', 'ITV', 'ITVBS', 'IP-PHONE', 'IPPHONE', 'IPPBS', 'APINOW', 'IOSBS', 'JCMOW', 'AOSBS', 'APISMC', 'APITD', 'IBUT', 'APIWC', 'IBUA', 'WOSBS', 'MASBAI', 'MASBAA') then 'TB Voice' else 'NA' end as CHANNEL, substring(regexp_extract(variant_get(parse_json(decoded_value), '$.header.betline', 'string'), '^\\w+\\s(\\w+)', 1), 1, 3) as BET_TYPE, null as RACE_NO, null as FIRST_RACE_NO, null as LAST_RACE_NO, true as FO_FLAG, pmu.acct_no as ACCOUNT_NO, ac.CUSTOMER_ID, total_cost/100 as TTL_COST, 'NA' as Cancelled, ticket__ticketId as TicketID, headersystemId as SYSTEM_CODE from live.ab_race_pmu_vw1 pmu left join live.v_wagering_dim_account_vw1 ac on pmu.acct_no = ac.ACCOUNT_NO left join live.fs_customer_segment_vw1 seg on ac.CUSTOMER_ID = seg.CUSTOMER_ID"
    }
  ]
}]