[{
  "data_flow_id": "4",
  "data_flow_group": "hkjc-streaming-dashboard-usecase",
  "source_format": "kafka",
  "source_details_dev": {
    "kafka.bootstrap.servers": "kafka.confluent.edap.corpdev.hkjc.com:9092",
    "subscribe": "edap-s-ap-pmu-activity",
    "kafka.security.protocol": "SSL",
    "kafka.ssl.truststore.location": "/Volumes/edap/default/certificates/truststore/kafka_truststore.jks",
    "kafka.ssl.keystore.location": "/Volumes/edap/default/certificates/keystore/kafka_keystore.jks",
    "kafka.ssl.truststore.secrets.scope": "akv-secrets-etl",
    "kafka.ssl.truststore.secrets.key": "capemm-truststore-pwd",
    "kafka.ssl.keystore.secrets.scope": "akv-secrets-etl",
    "kafka.ssl.keystore.secrets.key": "capemm-keystore-pwd",
    "maxOffsetsPerTrigger": "10000",
    "kafka.session.timeout.ms": "30000",
    "kafka.request.timeout.ms": "60000"
  },
  "bronze_reader_options": {
    "includeHeaders": "true",
    "startingOffsets": "earliest",
    "maxOffsetsPerTrigger": "10000",
    "minPartitions": "3",
    "failOnDataLoss": "false",
    "kafka.session.timeout.ms": "30000",
    "kafka.request.timeout.ms": "60000",
    "kafka.fetch.min.bytes": "1024",
    "kafka.fetch.max.wait.ms": "5000",
    "kafka.max.partition.fetch.bytes": "1048576"
  },
  "bronze_dev": {
    "target_details": {
      "catalog": "edap_dev",
      "schema": "stg_ak",
      "table": "raw_race_transactions_pmu",
      "path": "/Volumes/dlt_meta_uc/dlt_meta_gold_schema/gold_volume/data/gold/stores/"
    },
    "target_pii_fields": {
      "value" : "String"
    },
    "partition_columns": [
    ],
    "cluster_by": [
    ],
    "is_partitioned_by_run_date": "false",
    "is_streaming": "true",
    "bronze_table_properties": {
      "delta.autoOptimize.optimizeWrite": "true",
      "delta.autoOptimize.autoCompact": "true",
      "delta.enableChangeDataFeed": "true",
      "delta.logRetentionDuration": "interval 30 days",
      "delta.deletedFileRetentionDuration": "interval 7 days",
      "delta.tuneFileSizesForRewrites": "true"
    },
    "bronze_writer_config_options": {
      "mergeSchema": "true",
      "includeIngestionTimeAsColumn" : "true"
    },
    "bronze_data_quality_expectations_json_dev": "",
    "bronze_database_quarantine_dev": "",
    "bronze_quarantine_table": "",
    "bronze_quarantine_table_properties": {
      "delta.autoOptimize.optimizeWrite": "true",
      "delta.logRetentionDuration": "interval 90 days"
    }
  },
  "gold_dev": {
    "target_details": {
      "catalog": "edap_dev",
      "schema": "stg_ak",
      "table": "mv_customer_segment_snapshot",
      "path": "/Volumes/dlt_meta_uc/dlt_meta_gold_schema/gold_volume/data/gold/stores/"
    },
    "target_pii_fields": {
    },
    "partition_columns": [],
    "cluster_by": [],
    "is_streaming": "false",
    "gold_table_properties": {
      "delta.autoOptimize.optimizeWrite": "true",
      "delta.autoOptimize.autoCompact": "true",
      "delta.enableChangeDataFeed": "true",
      "delta.logRetentionDuration": "interval 60 days",
      "delta.deletedFileRetentionDuration": "interval 14 days"
    },
    "gold_writer_config_options": {
      "mergeSchema": "true"
    },
    "gold_data_quality_expectations_json_dev": "",
    "gold_transformation_json_dev": "file:/Workspace/Users/damanbansal@hkjccorpdev.onmicrosoft.com/aayrm5-dlt-meta/demo/conf/gold_level1_transformations.json"
  },
  "flatten_nested_data": "false",
  "column_to_extract": "",
  "version": "2.0",
  "description": "Kafka-based real-time customer data pipeline with Unity Catalog support (catalog.schema.table structure), comprehensive PII encryption/decryption, data quality validation, and CDC support for customer event processing",
  "metadata": {
    "created_by": "data-engineering-team",
    "created_date": "2024-01-15",
    "last_modified": "2024-01-15",
    "business_owner": "customer-analytics-team",
    "data_classification": "confidential",
    "retention_policy": "7_years",
    "compliance_requirements": [
      "GDPR",
      "CCPA",
      "SOX"
    ],
    "tags": [
      "customer-data",
      "real-time",
      "pii-encrypted",
      "kafka-streaming",
      "unity-catalog"
    ]
  }
},
{
  "data_flow_id": "5",
  "data_flow_group": "hkjc-streaming-dashboard-usecase",
  "source_format": "kafka",
  "source_details_dev": {
    "kafka.bootstrap.servers": "kafka.confluent.edap.corpdev.hkjc.com:9092",
    "subscribe": "edap-s-ap-pmu-activity",
    "kafka.security.protocol": "SSL",
    "kafka.ssl.truststore.location": "/Volumes/edap/default/certificates/truststore/kafka_truststore.jks",
    "kafka.ssl.keystore.location": "/Volumes/edap/default/certificates/keystore/kafka_keystore.jks",
    "kafka.ssl.truststore.secrets.scope": "akv-secrets-etl",
    "kafka.ssl.truststore.secrets.key": "capemm-truststore-pwd",
    "kafka.ssl.keystore.secrets.scope": "akv-secrets-etl",
    "kafka.ssl.keystore.secrets.key": "capemm-keystore-pwd",
    "maxOffsetsPerTrigger": "10000",
    "kafka.session.timeout.ms": "30000",
    "kafka.request.timeout.ms": "60000"
  },
  "bronze_reader_options": {
    "includeHeaders": "true",
    "startingOffsets": "earliest",
    "maxOffsetsPerTrigger": "10000",
    "minPartitions": "3",
    "failOnDataLoss": "false",
    "kafka.session.timeout.ms": "30000",
    "kafka.request.timeout.ms": "60000",
    "kafka.fetch.min.bytes": "1024",
    "kafka.fetch.max.wait.ms": "5000",
    "kafka.max.partition.fetch.bytes": "1048576",
    "custom_decode_pmu": "true",
    "custom_decode_trasaction_type": "RACE_PMU"
  },
  "bronze_dev": {
    "target_details": {
      "catalog": "edap_dev",
      "schema": "stg_ak",
      "table": "ab_race_pmu",
      "path": "/Volumes/dlt_meta_uc/dlt_meta_gold_schema/gold_volume/data/gold/stores/"
    },
    "target_pii_fields": {
    },
    "partition_columns": [
    ],
    "cluster_by": [
    ],
    "is_partitioned_by_run_date": "false",
    "is_streaming": "true",
    "bronze_table_properties": {
      "delta.autoOptimize.optimizeWrite": "true",
      "delta.autoOptimize.autoCompact": "true",
      "delta.enableChangeDataFeed": "true",
      "delta.logRetentionDuration": "interval 30 days",
      "delta.deletedFileRetentionDuration": "interval 7 days",
      "delta.tuneFileSizesForRewrites": "true"
    },
    "bronze_writer_config_options": {
      "mergeSchema": "true",
      "includeIngestionTimeAsColumn" : "true"
    },
    "bronze_data_quality_expectations_json_dev": "file:/Workspace/Users/damanbansal@hkjccorpdev.onmicrosoft.com/aayrm5-dlt-meta/demo/conf/dqe/hkjc-kafka-bronze/decode_value_valid_json_pmu.json",
    "bronze_database_quarantine_dev": "edap_dev.stg_ak",
    "bronze_quarantine_table": "ab_race_pmu_reject",
    "bronze_quarantine_table_properties": {
      "delta.autoOptimize.optimizeWrite": "true",
      "delta.logRetentionDuration": "interval 90 days"
    }
  },
  "gold_dev": {
    "target_details": {
      "catalog": "edap_dev",
      "schema": "stg_ak",
      "table": "race_transcation_event_pmu",
      "path": "/Volumes/dlt_meta_uc/dlt_meta_gold_schema/gold_volume/data/gold/stores/"
    },
    "target_pii_fields": {
    },
    "partition_columns": [],
    "cluster_by": [],
    "is_streaming": "true",
    "gold_table_properties": {
      "delta.autoOptimize.optimizeWrite": "true",
      "delta.autoOptimize.autoCompact": "true",
      "delta.logRetentionDuration": "interval 365 days",
      "delta.deletedFileRetentionDuration": "interval 30 days"
    },
    "gold_writer_config_options": {
      "mergeSchema": "true",
      "overwriteSchema": "false"
    },
    "gold_data_quality_expectations_json_dev": "",
    "gold_transformation_json_dev": "file:/Workspace/Users/damanbansal@hkjccorpdev.onmicrosoft.com/aayrm5-dlt-meta/demo/conf/gold_level1_transformations.json",
    "cdc_apply_changes": 
    {
        "keys": [
            "selling_date", 
            "ACCOUNT_NO",
            "ac_tran_no"
         ],
        "sequence_by": "time_stamp",
        "scd_type": "1",
        "apply_as_deletes": "",
        "except_column_list": []
    }
  },
  "flatten_nested_data": "false",
  "column_to_extract": "",
  "version": "2.0",
  "description": "Kafka-based real-time customer data pipeline with Unity Catalog support (catalog.schema.table structure), comprehensive PII encryption/decryption, data quality validation, and CDC support for customer event processing",
  "metadata": {
    "created_by": "data-engineering-team",
    "created_date": "2024-01-15",
    "last_modified": "2024-01-15",
    "business_owner": "customer-analytics-team",
    "data_classification": "confidential",
    "retention_policy": "7_years",
    "compliance_requirements": [
      "GDPR",
      "CCPA",
      "SOX"
    ],
    "tags": [
      "customer-data",
      "real-time",
      "pii-encrypted",
      "kafka-streaming",
      "unity-catalog"
    ]
  }
},
{
  "data_flow_id": "6",
  "data_flow_group": "hkjc-streaming-dashboard-usecase",
  "source_format": "kafka",
  "source_details_dev": {
    "kafka.bootstrap.servers": "kafka.confluent.edap.corpdev.hkjc.com:9092",
    "subscribe": "edap-s-ap-pmu-activity",
    "kafka.security.protocol": "SSL",
    "kafka.ssl.truststore.location": "/Volumes/edap/default/certificates/truststore/kafka_truststore.jks",
    "kafka.ssl.keystore.location": "/Volumes/edap/default/certificates/keystore/kafka_keystore.jks",
    "kafka.ssl.truststore.secrets.scope": "akv-secrets-etl",
    "kafka.ssl.truststore.secrets.key": "capemm-truststore-pwd",
    "kafka.ssl.keystore.secrets.scope": "akv-secrets-etl",
    "kafka.ssl.keystore.secrets.key": "capemm-keystore-pwd",
    "maxOffsetsPerTrigger": "10000",
    "kafka.session.timeout.ms": "30000",
    "kafka.request.timeout.ms": "60000"
  },
  "bronze_reader_options": {
    "includeHeaders": "true",
    "startingOffsets": "earliest",
    "maxOffsetsPerTrigger": "10000",
    "minPartitions": "3",
    "failOnDataLoss": "false",
    "kafka.session.timeout.ms": "30000",
    "kafka.request.timeout.ms": "60000",
    "kafka.fetch.min.bytes": "1024",
    "kafka.fetch.max.wait.ms": "5000",
    "kafka.max.partition.fetch.bytes": "1048576",
    "custom_decode_pmu": "true",
    "custom_decode_trasaction_type": "RACE_PMU_CANCEL"
  },
  "bronze_dev": {
    "target_details": {
      "catalog": "edap_dev",
      "schema": "stg_ak",
      "table": "ab_cancel_pmu",
      "path": "/Volumes/dlt_meta_uc/dlt_meta_gold_schema/gold_volume/data/gold/stores/"
    },
    "target_pii_fields": {
    },
    "partition_columns": [
    ],
    "cluster_by": [
    ],
    "is_partitioned_by_run_date": "false",
    "is_streaming": "true",
    "bronze_table_properties": {
      "delta.autoOptimize.optimizeWrite": "true",
      "delta.autoOptimize.autoCompact": "true",
      "delta.enableChangeDataFeed": "true",
      "delta.logRetentionDuration": "interval 30 days",
      "delta.deletedFileRetentionDuration": "interval 7 days",
      "delta.tuneFileSizesForRewrites": "true"
    },
    "bronze_writer_config_options": {
      "mergeSchema": "true",
      "includeIngestionTimeAsColumn" : "true"
    },
    "bronze_data_quality_expectations_json_dev": "file:/Workspace/Users/damanbansal@hkjccorpdev.onmicrosoft.com/aayrm5-dlt-meta/demo/conf/dqe/hkjc-kafka-bronze/decode_value_valid_json_pmu.json",
    "bronze_database_quarantine_dev": "edap_dev.stg_ak",
    "bronze_quarantine_table": "ab_cancel_pmu_reject",
    "bronze_quarantine_table_properties": {
      "delta.autoOptimize.optimizeWrite": "true",
      "delta.logRetentionDuration": "interval 90 days"
    }
  },
  "flatten_nested_data": "false",
  "column_to_extract": "",
  "version": "2.0",
  "description": "Kafka-based real-time customer data pipeline with Unity Catalog support (catalog.schema.table structure), comprehensive PII encryption/decryption, data quality validation, and CDC support for customer event processing",
  "metadata": {
    "created_by": "data-engineering-team",
    "created_date": "2024-01-15",
    "last_modified": "2024-01-15",
    "business_owner": "customer-analytics-team",
    "data_classification": "confidential",
    "retention_policy": "7_years",
    "compliance_requirements": [
      "GDPR",
      "CCPA",
      "SOX"
    ],
    "tags": [
      "customer-data",
      "real-time",
      "pii-encrypted",
      "kafka-streaming",
      "unity-catalog"
    ]
  }
}]
